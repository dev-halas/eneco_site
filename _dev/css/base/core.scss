@import url('https://fonts.googleapis.com/css2?family=Lexend:wght@100;200;300;400;500;700&display=swap');

$red: #D8221E;
$green: #9CB728;
$white: #ffffff;
$font: #5A5A5A;
$grey: #B2B2B2;
$lightGrey: #F5f5f5;

html {
    scroll-behavior: smooth;
    scroll-padding-top: 10vh;
}

body {
    font-family: 'Lexend', sans-serif;
    overflow-x: hidden;
    font-weight: 300;
    font-size: 16px;
    line-height: 1.7;
    color: $font;
}
h1, h2, h3, h4 {
    font-family: 'Lexend', sans-serif;
}

a {
    text-decoration: none;
    color: inherit;
    font-weight: normal;
}

h1 {
    font-size: 2rem;
    font-weight: 700;
}

h2 {
    font-size: 1.8rem;
    font-weight: 700;
}

h3 {
    font-size: 1.6rem;
    font-weight: 700;
}

h4 {
    font-size: 1.4rem;
}

h1,h2,h3,h4 {
    line-height: 1.5;
}

$breakpoints: (
  'mobile':  480px,
  'small': 768px,
  'tablet': 1024px,
  'laptop':  1200px,
  'large': 1600px,
  'fullhd': 1920px
) !default;

@mixin responsive($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
      // Prints a media query based on the value
      @media (max-width: map-get($breakpoints, $breakpoint)) {
        @content;
      }
    }
   
    // If the key doesn't exist in the map
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

body {
    @include responsive('large') {
        font-size: 14px;
    }
}


$container: 80vw;
$containerMobile: 80vw;

.container {
    width: min($container, 1600px);
    margin: 0 auto;
    position: relative;
    @include responsive('tablet') {
        width: min($containerMobile, 900px);
    }
}

@media screen and (max-width: 782px) {
    html {
        margin-top: 0px !important;
    }
}

.buttonOutline--white {
    letter-spacing: 2px;
    display: block;
    max-width: fit-content;
    padding: 12px 60px;
    color: $white;
    border: 1px solid $white;
    border-radius: 25px;
    -webkit-border-radius: 25px;
    -moz-border-radius: 25px;
    -ms-border-radius: 25px;
    -o-border-radius: 25px;
    transition: all .2s ease-in-out;
    -webkit-transition: all .2s ease-in-out;
    -moz-transition: all .2s ease-in-out;
    -ms-transition: all .2s ease-in-out;
    -o-transition: all .2s ease-in-out;
}

.buttonOutline--white:hover {
    background-color: $white;
    color: #9CB728;
}

.buttonWhite {
    background-color: $white;
    padding: 12px 60px;
    color: $font;
    border-radius: 25px;
    -webkit-border-radius: 25px;
    -moz-border-radius: 25px;
    -ms-border-radius: 25px;
    -o-border-radius: 25px;
    transition: all .2s ease-in-out;
    -webkit-transition: all .2s ease-in-out;
    -moz-transition: all .2s ease-in-out;
    -ms-transition: all .2s ease-in-out;
    -o-transition: all .2s ease-in-out;
}

.buttonWhite:hover {
    background-color: $green;
    color: $white;
}

.title {
    font-size: clamp(26px, 3.5vw, 100px);
    font-weight: 700;
    line-height: 1;
    color: $green;
}

.smallTitle {
    font-weight: 300;
    font-size: clamp(14px, 1vw, 22px);
    text-transform: uppercase;
}

